apiVersion: v1
kind: Namespace
metadata:
  name: apacheqa
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: apache-hello-world
  namespace: apacheqa
data:
  index.html: |
    <html>
    <head><title>Teste Deploy</title></head>
    <body>
      <h1>Deploy realizado</h1>
      </hr>
      <p>Maquina que respondeu a requisicao: {{NODE_NAME}} </p>
    </body>
    </html>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache
  namespace: apacheqa
  labels:
    app: apache
spec:
  replicas: 4
  selector:
    matchLabels:
      app: apache
  template:
    metadata:
      labels:
        app: apache
      annotations:
        kubectl.kubernetes.io/restartedAt: "{{now}}" # Força a recriação dos pods
    spec:
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
        - name: apache
          image: httpd:2.4
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /usr/local/apache2/htdocs/
              name: apache-html
            - mountPath: /templates/
              name: apache-template
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              cp /templates/index.html /usr/local/apache2/htdocs/index.html &&
              sed -i "s/{{NODE_NAME}}/$NODE_NAME/g" /usr/local/apache2/htdocs/index.html &&
              httpd-foreground
      volumes:
        - name: apache-html
          emptyDir: {}
        - name: apache-template
          configMap:
            name: apache-hello-world
---
apiVersion: v1
kind: Service
metadata:
  name: apache-service
  namespace: apacheqa
  labels:
    app: apache
spec:
  selector:
    app: apache
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-app1
  namespace: apacheqa
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: apache.192-168-122-200.nip.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: apache-service
                port:
                  number: 80
